{"version":3,"file":"static/js/207.890ff79e.chunk.js","mappings":"yOAGaA,EAAgBC,EAAAA,GAAAA,KAAH,gVAkBbC,EAAQD,EAAAA,GAAAA,MAAH,4JAIL,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAvB,IAMLC,EAAQN,EAAAA,GAAAA,MAAH,iSAWE,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAvB,IASZE,IAJaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0BAIDA,EAAAA,GAAAA,OAAH,kZAQD,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAvB,IACD,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAvB,IAChB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,KAAvB,IAQQ,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,KAAvB,IAChB,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,IAAvB,K,0DCtDX,SAASC,IACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA4BN,EAAAA,EAAAA,WAAS,GAArC,eAAOO,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOZ,MACnB,IAAK,OACHC,EAAQU,EAAMC,OAAOC,OACrB,MACF,IAAK,QACHV,EAASQ,EAAMC,OAAOC,OACtB,MACF,IAAK,WACHR,EAAYM,EAAMC,OAAOC,OACzB,MACF,QACE,OAEL,EAuBD,OACE,UAAC3B,EAAD,CAAe4B,SAtBI,SAAAH,GACnBA,EAAMI,iBACN,IAAMC,EAAOL,EAAMM,cACFD,EAAKZ,SAASS,MAElBK,OAAS,EACpBC,EAAAA,GAAAA,QAAc,iDAGhBX,GACEY,EAAAA,EAAAA,IAAS,CACPpB,KAAMgB,EAAKhB,KAAKa,MAChBX,MAAOc,EAAKd,MAAMW,MAClBT,SAAUY,EAAKZ,SAASS,SAG5BZ,EAAQ,IACRE,EAAS,IACTE,EAAY,IACb,EAGC,WACE,UAACjB,EAAD,uBAEE,SAACK,EAAD,CACE4B,KAAK,OACLrB,KAAK,OACLsB,UAAQ,EACRC,SAAUb,EACVG,MAAOb,QAGX,UAACZ,EAAD,oBAEE,SAACK,EAAD,CACE4B,KAAK,QACLrB,KAAK,QACLsB,UAAQ,EACRC,SAAUb,EACVG,MAAOX,QAGX,UAACd,EAAD,uBAEE,iBAAKoC,MAAO,CAAEC,QAAS,QAAvB,WACE,SAAChC,EAAD,CACE4B,KAAMf,EAAS,WAAa,OAC5BN,KAAK,WACLsB,UAAQ,EACRC,SAAUb,EACVG,MAAOT,KAET,mBACEiB,KAAK,SACLG,MAAO,CAAEC,QAAS,QAASC,OAAQ,OAAQC,OAAO,WAClDC,QAAS,kBAAMrB,GAAU,SAAAsB,GAAI,OAAKA,CAAL,GAApB,EAHX,SAKGvB,GACC,SAAC,MAAD,CAAWkB,MAAO,CAAEM,MAAO,aAE3B,SAAC,MAAD,CAAgBN,MAAO,CAAEM,MAAO,qBAKxC,SAAC,KAAD,CAASC,GAAG,SAAZ,oCACA,SAACrC,EAAD,CAAQ2B,KAAK,SAAb,uBAGL,C,cC3Gc,SAASW,IACpB,OACE,4BACE,UAACC,EAAA,EAAD,YACE,iBAAMC,QAAQ,WACd,uCACA,iBAAMC,IAAI,YAAYC,KAAK,kCAE7B,SAACtC,EAAD,MAGP,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContactEditor = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 14px;\n  padding: 16px;\n  width: 260px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-size: 18px;\n\n  @media screen and (min-width: 450px) {\n    width: 300px;\n  }\n`;\n\nexport const Lable = styled.label`\n  font-weight: 700;\n  width: 100%;\n  :focus-within {\n    color: ${props => props.theme.colors.accentColor};\n  }\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\nexport const Input = styled.input`\n  display: inline-flex;\n  width: calc(100% - 10px);\n  padding: 3px;\n  text-align: center;\n  border-color: transparent;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  font-weight: 700;\n  :focus {\n    border-color: ${props => props.theme.colors.accentColor};\n  }\n  outline: none;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n\n`\n\nexport const Submit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 8px;\n  height: 30px;\n  min-width: 80px;\n  border: 3px solid;\n  border-color: ${props => props.theme.colors.accentColor};\n  background-color: ${props => props.theme.colors.accentColor};\n  color: ${props => props.theme.colors.white};\n  border-radius: 4px;\n  font-weight: 700;\n  font-size: 14px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.white};\n    color: ${props => props.theme.colors.text};\n  }\n`;\n","import {\n  ContactEditor,\n  Lable,\n  Input,\n  Submit,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nimport { toast } from 'react-toastify';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/auth.operations';\n\nimport { RiEyeCloseFill, RiEyeFill } from 'react-icons/ri';\n\nexport function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPass, setIsPass] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'email':\n        setEmail(event.target.value);\n        break;\n      case 'password':\n        setPassword(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const password = form.password.value;\n\n    if (password.length < 7) {\n      toast.warning('Password must be at least 7 characters long!');\n      return;\n    }\n    dispatch(\n      register({\n        name: form.name.value,\n        email: form.email.value,\n        password: form.password.value,\n      })\n    );\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ContactEditor onSubmit={handleSubmit}>\n      <Lable>\n        Username\n        <Input\n          type=\"text\"\n          name=\"name\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </Lable>\n      <Lable>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          required\n          onChange={handleChange}\n          value={email}\n        />\n      </Lable>\n      <Lable>\n        Password\n        <div style={{ display: 'flex' }}>\n          <Input\n            type={isPass ? 'password' : 'text'}\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={password}\n          />\n          <button\n            type=\"button\"\n            style={{ display: 'block', border: 'none', cursor:'pointer' }}\n            onClick={() => setIsPass(prev => !prev)}\n          >\n            {isPass ? (\n              <RiEyeFill style={{ color: 'orange' }} />\n            ) : (\n              <RiEyeCloseFill style={{ color: 'orange' }} />\n            )}\n          </button>\n        </div>\n      </Lable>\n      <NavLink to=\"/login\">Already have account?</NavLink>\n      <Submit type=\"submit\">Sign Up</Submit>\n    </ContactEditor>\n  );\n}\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>SignUp</title>\n          <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n        </Helmet>\n        <RegisterForm />\n      </div>\n    );\n}\n"],"names":["ContactEditor","styled","Lable","props","theme","colors","accentColor","Input","Submit","NavLink","white","text","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","isPass","setIsPass","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","form","currentTarget","length","toast","register","type","required","onChange","style","display","border","cursor","onClick","prev","color","to","Register","Helmet","charSet","rel","href"],"sourceRoot":""}