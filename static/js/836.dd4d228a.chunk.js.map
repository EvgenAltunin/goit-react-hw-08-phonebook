{"version":3,"file":"static/js/836.dd4d228a.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Wrapper } from 'components/Loader/Loader.styled';\n\nexport const Loader = () => (\n  <Wrapper>\n    <ThreeDots\n      height=\"15\"\n      width=\"60\"\n      radius=\"9\"\n      color=\"orange\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  </Wrapper>\n);\n","import styled from 'styled-components';\n\nexport const ContactEditor = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 14px;\n  padding: 16px;\n  width: 260px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-size: 18px;\n\n  @media screen and (min-width: 450px) {\n    width: 300px;\n  }\n`;\n\nexport const Lable = styled.label`\n  font-weight: 700;\n  width: 100%;\n  :focus-within {\n    color: ${props => props.theme.colors.accentColor};\n  }\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\nexport const Input = styled.input`\n  display: inline-flex;\n  width: calc(100% - 10px);\n  padding: 3px;\n  text-align: center;\n  border-color: transparent;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  font-weight: 700;\n  :focus {\n    border-color: ${props => props.theme.colors.accentColor};\n  }\n  outline: none;\n`;\n\nexport const Submit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  min-width: 80px;\n  border: 3px solid;\n  border-color: ${props => props.theme.colors.accentColor};\n  background-color: ${props => props.theme.colors.accentColor};\n  color: ${props => props.theme.colors.white};\n  border-radius: 4px;\n  font-weight: 700;\n  font-size: 14px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.white};\n    color: ${props => props.theme.colors.text};\n  }\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import {\n  ContactEditor,\n  Lable,\n  Input,\n  Submit,\n} from 'components/ContactForm/ContactForm.styled';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { notificationParams } from 'settings/settings';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isContactNameInContactsList = contacts.some(\n      contact => contact.name === name\n    );\n\n    if (isContactNameInContactsList) {\n      toast.warning(`${name} is already in contacts!`, { notificationParams });\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactEditor onSubmit={handleSubmit}>\n      <Lable>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </Lable>\n      <Lable>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </Lable>\n      <Submit type=\"submit\">Add contact</Submit>\n    </ContactEditor>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n\n  :nth-child(2n + 1) {\n    background-color: ${props => props.theme.colors.itemBackgroundColorGrey};\n  }\n\n  @media screen and (min-width: 450px) {\n    padding: 8px 16px 8px 16px;\n  }\n`;\nexport const ContactText = styled.p`\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  min-width: 115px;\n  font-size: 14px;\n\n  @media screen and (min-width: 480px) and (max-width: 1199px) {\n    font-size: inherit;\n    min-width: 120px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: inherit;\n    min-width: 240px;\n  }\n`;\n\nexport const ContactButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  min-width: 80px;\n  border: 3px solid;\n  border-color: ${props => props.theme.colors.accentColor};\n  background-color: ${props => props.theme.colors.accentColor};\n  color: ${props => props.theme.colors.white};\n  border-radius: 4px;\n  font-weight: 700;\n  font-size: 14px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.white};\n    color: ${props => props.theme.colors.text};\n  }\n`;\n","import { BsFillPersonFill, BsTelephoneFill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  Item,\n  ContactText,\n  ContactButton,\n} from 'components/ContactItem/ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  return (\n    <Item key={id}>\n      <ContactText>\n        <BsFillPersonFill\n          style={{\n            fill: 'orange',\n            marginRight: '5px',\n            width: '14px',\n            height: '14px',\n          }}\n        />\n        {name}\n      </ContactText>\n      <ContactText>\n        <BsTelephoneFill\n          style={{\n            fill: 'orange',\n            marginRight: '5px',\n            width: '14px',\n            height: '14px',\n          }}\n        />\n        {number}\n      </ContactText>\n      <ContactButton\n        type=\"button\"\n        aria-label=\"Delete contact\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </ContactButton>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.white};\n\n  width: calc(100vw - 20px);\n\n  box-shadow: ${props => props.theme.shadow.contactsList};\n  border-radius: 4px;\n\n  @media screen and (min-width: 1200px) {\n    max-width: 600px;\n  }\n\n  @media screen and (min-width: 480px) and (max-width: 1200px) {\n    max-width: 500px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilterValue } from 'redux/contacts/selectors';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ContactsList } from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterValue);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(contactInfo => (\n        <ContactItem key={contactInfo.id} contact={contactInfo} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Lable = styled.label`\n  display: block;\n  text-align: center;\n  justify-content: center;\n\n  font-size: 18px;\n  font-weight: 700;\n  :focus-within {\n    color: ${props => props.theme.colors.accentColor};\n  }\n`;\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 3px;\n  text-align: center;\n  border-color: transparent;\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n  font-weight: 700;\n  :focus {\n    border-color: ${props => props.theme.colors.accentColor};\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValueAction } from 'redux/contacts/filter.slice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nimport { Lable, Input } from 'components/Filter/Filter.styled';\nexport const Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(setFilterValueAction(event.target.value));\n  };\n\n  return (\n    <Lable>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n        value={filter}\n      />\n    </Lable>\n  );\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ToastContainer } from 'react-toastify';\nimport { notificationParams } from 'settings/settings';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <h2 style={{ textAlign: 'center', fontWeight: '700' }}>Contacts</h2>\n      <Filter />\n      <div\n        style={{\n          height: '30px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {isLoading && !error && <Loader />}\n        {error && <p style={{ textAlign: 'center' }}>{error}</p>}\n      </div>\n\n      <ContactList />\n      <ToastContainer\n        theme=\"colored\"\n        autoClose={notificationParams.autoClose}\n      />\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactEditor","Lable","props","theme","colors","accentColor","Input","Submit","white","text","getContacts","state","contacts","items","getFilterValue","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","some","contact","toast","notificationParams","addContact","type","pattern","title","required","onChange","Item","itemBackgroundColorGrey","ContactText","ContactButton","ContactItem","id","style","fill","marginRight","onClick","deleteContact","ContactsList","shadow","contactsList","ContactList","filteredContacts","toLowerCase","includes","map","contactInfo","Filter","setFilterValueAction","Phonebook","isLoading","error","useEffect","fetchContacts","Helmet","charSet","textAlign","fontWeight","display","justifyContent","alignItems","autoClose"],"sourceRoot":""}